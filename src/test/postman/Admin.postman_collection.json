{
	"info": {
		"_postman_id": "9c010284-67c8-454a-88c4-47835041f061",
		"name": "Admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30313267"
	},
	"item": [
		{
			"name": "user list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful sign in request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"All users loaded\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "valid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful sign in request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Valid user fetched\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users/42",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"42"
					]
				}
			},
			"response": []
		},
		{
			"name": "set valid user role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Set user role is ok\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"User role is admin\", function() {\r",
							"    let role = pm.response.json()['role']['role'];\r",
							"    pm.expect(role).to.equal('admin')\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"role\": \"admin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/2/role",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"2",
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "set invalid user role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Set user role\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"role\": \"user\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/2/role",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"2",
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful sign in request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Member successfully deleted\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/users/3",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "all bookings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"All bookings were loaded\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/bookings",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"bookings"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE booking by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful deletion of booking\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/bookings/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"bookings",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "change status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status successfully changed\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"pm.test(\"Booking status is Accepted\", function() {",
							"    let statusName = pm.response.json()['status']['statusName'];",
							"    pm.expect(statusName).to.equal('Accepted')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"statusName\": \"Accepted\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/bookings/1/status",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"bookings",
						"1",
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "update booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking information was successfully updated\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Declined\",\n    \"isFullDay\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/bookings/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"bookings",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "create booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking was successfully created\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"roomName\": \"Raum 30\",\n    \"date\": \"12.11.2023\",\n    \"isFullDay\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/bookings",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"bookings"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "localhost:8080/api/v1/admin",
			"type": "string"
		}
	]
}